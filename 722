import json
import csv
import re
from datetime import datetime

# File paths
json_file_path = r'C:\repo\json\PROD\PA.json'  # Replace with your JSON file path
output_csv_path = r'C:\repo\json\PROD\PA_output.csv'  # Replace with your desired output CSV file path

# Load JSON data
try:
    with open(json_file_path) as json_file:
        json_data = json.load(json_file)
except FileNotFoundError:
    print(f"File not found: {json_file_path}")
    exit(1)
except json.JSONDecodeError:
    print(f"Error decoding JSON from file: {json_file_path}")
    exit(1)

# Function to flatten JSON and extract values
def extract_values(obj):
    values = []
    if isinstance(obj, dict):
        for v in obj.values():
            values.extend(extract_values(v))
    elif isinstance(obj, list):
        for item in obj:
            values.extend(extract_values(item))
    else:
        values.append(obj)
    return values

# Extract values from JSON
flat_values = extract_values(json_data)

# Write values to CSV
with open(output_csv_path, mode='w', newline='', encoding='utf-8') as csv_file:
    writer = csv.writer(csv_file)
    writer.writerow(["Values"])  # Header
    for value in flat_values:
        writer.writerow([value])

print(f"CSV file saved at: {output_csv_path}")
