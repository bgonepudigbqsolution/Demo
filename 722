import json
import csv
import re
from datetime import datetime

# File paths
json_file_path = r'C:\repo\json\PROD\PA.json'  # Replace with your JSON file path
output_csv_path = r'C:\repo\json\PROD\PA_output.csv'  # Replace with your desired output CSV file path

# Load JSON data
try:
    with open(json_file_path) as json_file:
        json_data = json.load(json_file)
except FileNotFoundError:
    print(f"File not found: {json_file_path}")
    exit(1)
except json.JSONDecodeError:
    print(f"Error decoding JSON from file: {json_file_path}")
    exit(1)

# Function to flatten JSON and extract key-value pairs
def extract(obj, parent_key=""):
    key_values = []
    if isinstance(obj, dict):
        for k, v in obj.items():
            full_key = f"{parent_key}.{k}" if parent_key else k
            key_values.extend(extract(v, full_key))
    elif isinstance(obj, list):
        for i, item in enumerate(obj):
            full_key = f"{parent_key}[{i}]"
            key_values.extend(extract(item, full_key))
    else:
        key_values.append((parent_key, obj))
    return key_values

# Extract data from JSON and write to CSV
flat_data = extract(json_data)

# Get the unique headers
headers = sorted(set(key for key, _ in flat_data))

# Write to CSV
with open(output_csv_path, mode='w', newline='', encoding='utf-8') as csv_file:
    writer = csv.writer(csv_file)
    writer.writerow(headers)
    
    # Write the values row-wise
    row = []
    for header in headers:
        value = next((v for k, v in flat_data if k == header), "")
        row.append(value)
    writer.writerow(row)

print(f"CSV file saved at: {output_csv_path}")
