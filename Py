import json
import csv
import re
from datetime import datetime

# Load the JSON data from the file
with open(r'C:\repo\json\PROD\PA.json') as json_file:
    jsondata = json.load(json_file)

# Function to flatten JSON and get key-value pairs
def extract_key_values(json_obj):
    key_values = []

    def extract(obj, parent_key=""):
        if isinstance(obj, dict):
            for k, v in obj.items():
                full_key = f"{parent_key}.{k}" if parent_key else k
                extract(v, full_key)
        elif isinstance(obj, list):
            for i, item in enumerate(obj):
                extract(item, f"{parent_key}.{i}")
        else:
            key_values.append((parent_key, obj))

    extract(json_obj)
    return key_values

# Ensure jsondata is a list
if isinstance(jsondata, dict):
    jsondata = [jsondata]

# Extract key-value pairs from each JSON entry
all_key_values = []
for entry in jsondata:
    all_key_values.extend(extract_key_values(entry))

# Write to CSV
timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
csv_file_path = f'C:\\repo\\json\\PROD\\PA_{timestamp}.csv'
with open(csv_file_path, 'w', newline='') as data_file:
    csv_writer = csv.writer(data_file)
    csv_writer.writerow(["Key", "Value"])
    for key, value in all_key_values:
        csv_writer.writerow([key, value])

print(f"Data successfully written to {csv_file_path}")

# Paths to the input CSV and the output CSV
input_csv_path = csv_file_path  # Update with your CSV file path
output_csv_path = f'C:\\repo\\json\\PROD\\new_transport_{timestamp}.csv'  # Update with your desired path

# Read the CSV file and extract columns A and B
columns_a_b = []
with open(input_csv_path, newline='') as csvfile:
    csvreader = csv.reader(csvfile)
    for row in csvreader:
        # Assuming columns A and B are the first two columns
        columns_a_b.append(row[:2])

# Transpose the columns
transposed_data = list(zip(*columns_a_b))

# Write the transposed data to a new CSV file
with open(output_csv_path, 'w', newline='') as csvfile:
    csvwriter = csv.writer(csvfile)
    for row in transposed_data:
        csvwriter.writerow(row)

print(f"Transposed data successfully written to {output_csv_path}")
